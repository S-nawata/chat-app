{"ast":null,"code":"var _jsxFileName = \"/Users/snawata/codevillage/48/chat-app/src/components/LoggedInRoute.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoggedInRoute = ({\n  children\n}) => {\n  _s();\n\n  const userState = useContext(AuthContext);\n\n  if (useState.loding) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30ED\\u30FC\\u30C9\\u4E2D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (userState.user === null) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n  return children;\n};\n\n_s(LoggedInRoute, \"1bgnHmZ28qabB+fm7wMWRXZJcPg=\");\n\n_c = LoggedInRoute;\nexport default LoggedInRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedInRoute\");","map":{"version":3,"sources":["/Users/snawata/codevillage/48/chat-app/src/components/LoggedInRoute.jsx"],"names":["useContext","useState","AuthContext","Redirect","LoggedInRoute","children","userState","loding","user"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,QAAMC,SAAS,GAAGN,UAAU,CAACE,WAAD,CAA5B;;AACA,MAAGD,QAAQ,CAACM,MAAZ,EAAoB;AAChB,wBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AACH;;AAED,MAAID,SAAS,CAACE,IAAV,KAAmB,IAAvB,EAA6B;AACzB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,SAAOH,QAAP;AACH,CAXD;;GAAMD,a;;KAAAA,a;AAaN,eAAeA,aAAf","sourcesContent":["import { useContext, useState } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { Redirect } from \"react-router-dom\";\n\nconst LoggedInRoute = ({ children }) => {\n    const userState = useContext(AuthContext);\n    if(useState.loding) {\n        return<h1>ロード中</h1>;\n    }\n\n    if (userState.user === null) {\n        return <Redirect to =\"/login\" />;\n    }\n\n    return children;\n};\n\nexport default LoggedInRoute;\n"]},"metadata":{},"sourceType":"module"}